name: Security Vulnerability Analysis

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore CodeOptimization/CodeOptimization.csproj

    - name: Build
      run: dotnet build CodeOptimization/CodeOptimization.csproj --no-restore

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore CodeOptimization/CodeOptimization.csproj

    - name: Run dotnet list package vulnerabilities
      run: |
        echo "Checking for vulnerable packages..."
        dotnet list CodeOptimization/CodeOptimization.csproj package --vulnerable --include-transitive
        if [ $? -ne 0 ]; then
          echo "Vulnerable packages found!"
          exit 1
        fi

    - name: Generate dependency report
      run: |
        echo "Generating dependency report..."
        dotnet list CodeOptimization/CodeOptimization.csproj package --include-transitive > dependency-report.txt
        echo "Dependency report generated:"
        cat dependency-report.txt

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore CodeOptimization/CodeOptimization.csproj

    - name: Run security audit with dotnet list
      run: |
        echo "Running security audit..."
        echo "## Security Audit Report" > security-audit-report.md
        echo "Generated: $(date)" >> security-audit-report.md
        echo "" >> security-audit-report.md
        
        echo "### Vulnerable Packages Check" >> security-audit-report.md
        if dotnet list CodeOptimization/CodeOptimization.csproj package --vulnerable --include-transitive 2>&1 | tee vulnerable-packages.txt; then
          echo "✅ No vulnerable packages found" >> security-audit-report.md
        else
          echo "⚠️ Vulnerable packages detected:" >> security-audit-report.md
          cat vulnerable-packages.txt >> security-audit-report.md
        fi
        
        echo "" >> security-audit-report.md
        echo "### Outdated Packages Check" >> security-audit-report.md
        dotnet list CodeOptimization/CodeOptimization.csproj package --outdated --include-transitive >> security-audit-report.md
        
        echo "" >> security-audit-report.md
        echo "### All Dependencies" >> security-audit-report.md
        dotnet list CodeOptimization/CodeOptimization.csproj package --include-transitive >> security-audit-report.md

    - name: Upload security audit report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: |
          security-audit-report.md
          vulnerable-packages.txt

  snyk-security:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    if: ${{ secrets.SNYK_TOKEN != '' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore CodeOptimization/CodeOptimization.csproj

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/dotnet@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=CodeOptimization/CodeOptimization.csproj

  generate-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-check, security-audit]
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Generate comprehensive security report
      run: |
        echo "# Security Scan Report - $(date)" > security-scan-report.md
        echo "" >> security-scan-report.md
        echo "## Scan Results Summary" >> security-scan-report.md
        echo "" >> security-scan-report.md
        echo "| Tool | Status |" >> security-scan-report.md
        echo "|------|--------|" >> security-scan-report.md
        echo "| CodeQL Analysis | ${{ needs.codeql-analysis.result }} |" >> security-scan-report.md
        echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> security-scan-report.md
        echo "| Security Audit | ${{ needs.security-audit.result }} |" >> security-scan-report.md
        echo "| Snyk Security | ${{ secrets.SNYK_TOKEN != '' && 'Skipped (No Token)' || 'Not Configured' }} |" >> security-scan-report.md
        echo "" >> security-scan-report.md
        echo "## Detailed Results" >> security-scan-report.md
        echo "" >> security-scan-report.md
        
        if [ -f "security-audit-report/security-audit-report.md" ]; then
          echo "### Security Audit Results" >> security-scan-report.md
          echo '```markdown' >> security-scan-report.md
          cat security-audit-report/security-audit-report.md >> security-scan-report.md
          echo '```' >> security-scan-report.md
        fi

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-report
        path: security-scan-report.md

    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('security-scan-report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });
